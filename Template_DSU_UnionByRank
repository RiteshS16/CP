class UnionFind
{
    private: vector<int> p, rank;
    public:

    UnionFind(int n)
    {
        rank.resize(n,0);
        p.resize(n,0);
        for(int i=0;i<n;i++)
        p[i]=i;
        // iota(p.begin(),p.end(),0);
    }

    int findSet(int i)
    { 
        if(p[i]==i)
        return i;
        return p[i] = findSet(p[i]);
    }

    // bool isSameSet(int i, int j){ return findSet(i) == findSet(j);}

    void unionSet(int i, int j)
    {
        int x=findSet(i);
        int y=findSet(j);
        if(x!=y)
        {
            if(rank[x] > rank[y]) p[y] = x;
            else 
            {
                p[x] = y;
                if(rank[x] == rank[y]) 
                rank[y]++;
            }
        }
    }
};
